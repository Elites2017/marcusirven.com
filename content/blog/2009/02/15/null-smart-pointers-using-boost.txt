--- 
title:      Null Smart Pointers Using Boost
created_at: 2009-02-15 12:55:43.106567 -06:00
blog_post:  true
layout:     post
id:         blog
filter:
  - erb
  - textile
--- 
Managing memory is one of the pains that comes with developing in C++.  Smart pointers such as std::auto_ptr help make things easier but they come with their own issues.  My smart pointer implementation of choice is boost's shared_ptr.  A pattern I have found useful is:

<% uv(:lang => "c++", :line_numbers => true, :theme => "active4d") do -%>
class Foo
{
public:
    typedef boost::shared_ptr<Foo> Ptr;
    static Foo::Ptr Null;
public:
    // rest of declaration
};
<% end -%>

And then one can use them like:

<% uv(:lang => "c++", :line_numbers => true, :theme => "active4d") do -%>
void f(Foo::Ptr foo)
{
    if (foo == Foo::Null) 
    {
        // handle null case
    }
}
<% end -%>
